# Timeline Filter Configuration Example
# Copy this file to .env and fill in your values

# HTTP Server
HTTP_PORT=4050
EXTERNAL_BASE=https://your-feed-generator.com

# Database
DATABASE_URL=sqlite://timeline-filter.db

# Timeline Filter Settings
# Path to timeline feeds YAML configuration file
TIMELINE_FEEDS=config.yml

# Enable/disable timeline consumer (default: true)
TIMELINE_CONSUMER_ENABLE=true

# Global poll interval for all users (can be overridden per-user)
# Format: "10s", "30s", "1m", "5m", etc.
POLL_INTERVAL=30s

# Cleanup Settings
# The cleanup task deletes old posts from the database based on their last update time
# - CLEANUP_TASK_ENABLE: Enable/disable automatic cleanup (default: true)
# - CLEANUP_TASK_INTERVAL: How often to run cleanup (default: 1h)
# - CLEANUP_TASK_MAX_AGE: Delete posts older than this (default: 48h)
#
# How it works:
# - Posts have an "updated_at" timestamp (set when first indexed or updated)
# - Cleanup runs every INTERVAL and deletes posts where updated_at < (now - MAX_AGE)
# - This is based on TIME, not POST COUNT - it does NOT keep a fixed number of posts!
# - New posts continue to be indexed, old posts are automatically removed
#
# Examples:
# - MAX_AGE=48h: Keep last 48 hours of posts (~500-1000 posts typically)
# - MAX_AGE=7d: Keep last week (~3500-7000 posts)
# - MAX_AGE=30d: Keep last month (~15000-30000 posts)
CLEANUP_TASK_ENABLE=true
CLEANUP_TASK_INTERVAL=1h
CLEANUP_TASK_MAX_AGE=48h

# User Agent (required)
# Format: "your-service-name (version; +https://your-repo-url)"
USER_AGENT=timeline-filter (0.1.0; +https://github.com/YOUR-USERNAME/timeline-filter)

# Logging
# RUST_LOG=timeline_filter=debug,info
RUST_LOG=info

# Optional: Custom CA Certificate Bundles (semicolon-separated)
# CERTIFICATE_BUNDLES=/path/to/cert1.pem;/path/to/cert2.pem
